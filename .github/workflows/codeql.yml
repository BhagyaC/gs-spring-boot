name: "CodeQL"

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  analyze:
    name: Analyze (${{ matrix.language }})
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    timeout-minutes: ${{ (matrix.language == 'swift' && 120) || 360 }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          - language: java-kotlin
            build-mode: autobuild # Switch to 'autobuild' to ensure both Java and Kotlin are analyzed.

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        build-mode: ${{ matrix.build-mode }}
        queries: +security-extended,security-and-quality
        config-file: .github/codeql/codeql-config.yml # Add a CodeQL config file if needed for custom queries or settings.

    - if: matrix.build-mode == 'manual'
      name: Set up Java environment
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - if: matrix.build-mode == 'manual'
      name: Build with Maven
      run: |
        mvn -B clean install -DskipTests

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
        upload: true

# Optional: Add a custom script to filter out duplicate classes.
    - name: Filter Duplicate Classes
      run: |
        # This script will identify and exclude duplicate classes before analysis
        DUPLICATES=$(find . -type f -name "*.java" | xargs basename | sort | uniq -d)
        for FILE in $DUPLICATES; do
          echo "Excluding duplicate class: $FILE"
          find . -type f -name "$FILE" -exec rm {} \;
        done

# Optional: Retry mechanism for dependency fetching
    - name: Retry Dependency Fetching
      run: |
        for i in {1..3}; do
          mvn dependency:resolve && break || sleep 30
        done

# Optional: Add a caching mechanism to speed up dependency resolution
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"
